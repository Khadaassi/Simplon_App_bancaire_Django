"""
Django settings for Bamk project.

Generated by 'django-admin startproject' using Django 5.0.6.

For plus d'infos : 
https://docs.djangoproject.com/en/5.0/topics/settings/
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

# Charger les variables d'environnement
load_dotenv()

# Base du projet
BASE_DIR = Path(__file__).resolve().parent.parent

# âš¡ Variables sensibles via .env
SECRET_KEY = os.getenv('SECRET_KEY', 'default_secret_key')
DEBUG = os.getenv('DEBUG', 'False') == 'True'
ALLOWED_HOSTS = ['localhost', 'localhost:8080', '127.0.0.1']


# ðŸ”¹ Applications installÃ©es
INSTALLED_APPS = [
    # Apps du projet
    'Bamk',
    'loan',  
    'user',
    'news',
    'chat',
    'channels',

    # Apps Django
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Tailwind et outils dev
    'tailwind',
    'theme',
    'django_browser_reload',
]

# ðŸ”¹ Middlewares
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django_browser_reload.middleware.BrowserReloadMiddleware",
]

# ðŸ”¹ Configuration des templates
ROOT_URLCONF = 'Bamk.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# ðŸ”¹ ASGI / WebSockets
ASGI_APPLICATION = 'Bamk.asgi.application'

# ðŸ”¹ Base de donnÃ©es (SQL Server avec pyodbc)
DATABASES = {
    'default': {
        'ENGINE': 'mssql',
        'NAME': os.getenv('AZURE_DATABASE'),
        'USER': os.getenv('AZURE_USERNAME'),
        'PASSWORD': os.getenv('AZURE_PASSWORD'),
        'HOST': os.getenv('AZURE_SERVER'),
        'PORT': '1433',
        'OPTIONS': {
            'driver': 'ODBC Driver 18 for SQL Server',
            'extra_params': 'TrustServerCertificate=yes',
            'autocommit': True,
        },
    }
}

# ðŸ”¹ Configuration API FastAPI
FASTAPI_BASE_URL = os.getenv('FASTAPI_BASE_URL', "http://localhost:8000")

# ðŸ”¹ Validation des mots de passe
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# ðŸ”¹ Internationalisation
LANGUAGE_CODE = 'fr'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# ðŸ”¹ Fichiers statiques et mÃ©dias
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# # Gestion des fichiers statiques avec WhiteNoise en prod
# if not DEBUG:
#     STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# ðŸ”¹ Configuration Tailwind
TAILWIND_APP_NAME = 'theme'

# ðŸ”¹ Channels (WebSockets)
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",  # Pour le dev
        # 'BACKEND': 'channels_redis.core.RedisChannelLayer',  # Pour Redis en prod
        # 'CONFIG': {"hosts": [("127.0.0.1", 6379)]},  # Si Redis est utilisÃ©
    },
}

# # ðŸ”¹ Configuration spÃ©cifique au mode dÃ©veloppement
# if DEBUG:
#     INTERNAL_IPS = ["127.0.0.1"]
#     INSTALLED_APPS.append("debug_toolbar")
#     MIDDLEWARE.append("debug_toolbar.middleware.DebugToolbarMiddleware")
